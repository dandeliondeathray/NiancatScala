swagger: "2.0"

info:
  version: 1.0.0
  title: Niancat
  description: API for the Niancat chat service.

schemes:
  - http
basePath: /v1

paths:
  /puzzle:
    get:
      summary: Send a chat message to get todays puzzle
      description: The puzzle consists of nine letters, which make up some word
                   in Swedish.
      produces:
        - application/json
      responses:
        200:
          description: Todays puzzle
          schema:
            $ref: '#/definitions/Messages'
        default:
          description: Unknown error
    post:
      summary: Set todays puzzle
      description: Setting the puzzle returns the last puzzle solution
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - name: puzzle
        in: body
        description: The new puzzle.
        required: true
        schema:
          $ref: '#/definitions/Messages'
      responses:
        200:
          description: The puzzle was set and the last days puzzle is returned
          schema:
            $ref: '#/definitions/PuzzleBody'
    delete:
      summary: Remove current puzzle
      description: Currently only used in acceptance testing
      responses:
        200:
          description: The puzzle was removed.

  /solution/{solution}:
    post:
      summary: Check a solution for the current puzzle
      produces:
        - application/json
      parameters:
      - name: user
        in: body
        description: The user id of the person checking the solution.
        required: true
        schema:
          $ref: '#/definitions/UserInBody'
      responses:
        200:
          description: The reply to the user and the notification, or just a
                       reply that the puzzle is incorrect.
          schema:
            $ref: '#/definitions/Messages'

  /unsolution/{user}:
    get:
      summary: List all unsolutions for a user
      parameters:
      - name: user
        in: path
        description: Which user to list unsolutions for.
        required: true
        type: string
      responses:
        200:
          description: Returns a list of all unsolutions
          schema:
            $ref: '#/definitions/Messages'

    post:
      summary: Store an unsolution for a user
      parameters:
      - name: user
        in: path
        description: The user for which to store the unsolution.
        required: true
        type: string
      - name: unsolution
        in: body
        description: The unsolution to store.
        required: true
        schema:
          $ref: '#/definitions/UnsolutionBody'
      responses:
        200:
          description: Response stored.
          schema:
            $ref: '#/definitions/Messages'

definitions:
  PuzzleBody:
    type: object
    required:
      - puzzle
    properties:
      puzzle:
        type: string
  UserInBody:
    type: object
    required:
      - user
    properties:
      user:
        type: string
  UnsolutionBody:
    type: object
    required:
      - unsolution
    properties:
      unsolution:
        type: string
  Messages:
    type: array
    items:
      $ref: '#/definitions/Message'
  Message:
    type: object
    required:
      - response_type
      - message
    properties:
      response_type:
        type: string
      message:
        type: string
      channel_id:
        type: string
